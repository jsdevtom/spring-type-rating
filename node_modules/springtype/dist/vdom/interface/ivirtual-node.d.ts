export interface IVirtualNodeAttributes {
    key?: string;
    ref?: string;
    [attributeName: string]: any;
}
export interface IVirtualNode<A = IVirtualNodeAttributes> {
    type: IVirtualNodeType;
    attributes: A;
    children: IVirtualChildren;
}
export declare type IVirtualNodeType = string;
export declare type IVirtualKey = string | number | any;
export declare type IVirtualRefObject<T> = {
    current?: T | null;
};
export declare type IVirtualRefCallback<T> = (instance: T | null) => void;
export declare type IVirtualRef<T> = IVirtualRefObject<T> | IVirtualRefCallback<T>;
export declare type IVirtualChild = IVirtualNode<any> | object | string | number | boolean | null | undefined;
export declare type IVirtualChildren = IVirtualChild[];
